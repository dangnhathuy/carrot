{"version":3,"sources":["components/Form.js","components/WeatherPage.js","App.js","reportWebVitals.js","index.js"],"names":["popularCities","Header","styled","h1","FormWrap","div","Form","Description","FormInput","CityInput","input","CitySubmit","button","ErrorMessage","h3","PopularCities","Link","Home","onCitySelect","onInputChange","route","errorMessage","id","type","placeholder","onChange","onClick","size","map","city","index","value","Container","WeatherCard","ReturnArrow","BsFillCaretLeftFill","City","p","Weather","MainTemp","Temperature","UnitsContainer","Celcius","Fahrenheit","WeatherPage","weather","onRouteChange","useState","unit","setUnit","temperature","toFixed","main","setMain","max","setMax","min","setMin","onUnitChange","event","target","App","setInput","setRoute","setErrorMessage","setWeather","key","replace","onCitySubmit","fetch","process","then","response","json","name","mainWeather","w","push","temp","temp_max","temp_min","cod","message","onKeyPress","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wuFAKA,IAAMA,EAAgB,CAAE,UAAW,YAAa,YA8B1CC,EAASC,IAAOC,GAAV,KASNC,EAAWF,IAAOG,IAAV,KAMRC,EAAOJ,IAAOG,IAAV,KA2BJE,EAAcL,IAAOG,IAAV,KAIXG,EAAYN,IAAOG,IAAV,KAQTI,EAAYP,IAAOQ,MAAV,KAiBTC,EAAYT,IAAOU,OAAT,KAoBVC,EAAeX,IAAOY,GAAV,KAQZC,EAAgBb,IAAOG,IAAV,KAmBbW,EAAOd,IAAOU,OAAV,KASKK,EA3JF,SAAC,GAAwD,IAAvDC,EAAsD,EAAtDA,aAAcC,EAAwC,EAAxCA,cAAeC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,aACjD,OACI,cAACjB,EAAD,UACE,eAACE,EAAD,WACI,eAACL,EAAD,oBAEE,cAAC,IAAD,OAEF,cAACM,EAAD,uCACA,eAACC,EAAD,CAAWc,GAAIF,EAAf,UACE,cAACX,EAAD,CAAWc,KAAK,OAAOC,YAAY,kBAAkBC,SAAUN,IAC/D,cAACR,EAAD,CAAYe,QAASR,EAArB,SAAmC,cAAC,IAAD,CAAkBS,KAAM,UAE7D,eAACd,EAAD,CAAcS,GAAIF,EAAlB,qBAAkCC,EAAlC,OACA,uBACA,+CACA,cAACN,EAAD,UAEIf,EAAc4B,KAAI,SAACC,EAAMC,GAAP,OAClB,cAACd,EAAD,CAAkBe,MAAOF,EAAMH,QAASR,EAAxC,SAAuDW,GAA5CC,c,miFCtB3B,IAgDME,EAAY9B,IAAOG,IAAV,KAKT4B,EAAc/B,IAAOG,IAAV,KAuBXJ,EAAQC,IAAOG,IAAT,KAMN6B,EAAchC,YAAOiC,IAAPjC,CAAH,KAqBXkC,EAAOlC,IAAOmC,EAAV,KAIJC,EAAUpC,IAAOmC,EAAV,KAKPE,EAAWrC,IAAOG,IAAV,KAIRmC,GAActC,IAAOG,IAAV,KAOXoC,GAAiBvC,IAAOG,IAAV,KAOdqC,GAAUxC,IAAOU,OAAV,KAkBP+B,GAAazC,IAAOU,OAAV,KAiBDgC,GArKK,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,cAAmB,EACpBC,mBAAS,WADW,mBACtCC,EADsC,KAChCC,EADgC,OAEpBF,oBAAUF,EAAQK,YAAc,QAAQC,WAFpB,mBAEtCC,EAFsC,KAEhCC,EAFgC,OAGtBN,oBAAUF,EAAQS,IAAK,QAAQH,WAHT,mBAGtCG,EAHsC,KAGjCC,EAHiC,OAItBR,oBAAUF,EAAQW,IAAM,QAAQL,WAJV,mBAItCK,EAJsC,KAIjCC,EAJiC,KAOxCC,EAAe,SAACC,GAEL,YAATX,EAC2B,eAAvBW,EAAMC,OAAO7B,QACbsB,GAAkB,EAAPD,EAAS,EAAK,IAAID,WAC7BI,GAAgB,EAAND,EAAQ,EAAK,IAAIH,WAC3BM,GAAgB,EAAND,EAAQ,EAAK,IAAIL,YAGf,eAATH,GACoB,YAAvBW,EAAMC,OAAO7B,QACbsB,GAAU,EAAE,GAAMD,EAAK,KAAKD,WAC5BI,GAAS,EAAE,GAAMD,EAAI,KAAKH,WAC1BM,GAAS,EAAE,GAAMD,EAAI,KAAKL,YAGlCF,EAAQU,EAAMC,OAAO7B,QAGzB,OACI,cAACC,EAAD,UACI,eAACC,EAAD,WACA,cAACC,EAAD,CAAcP,KAAM,GAAID,QAASoB,IAC7B,cAAC,EAAD,UACI,cAACV,EAAD,UAAOS,EAAQhB,SAEnB,cAACS,EAAD,UAAUO,EAAQA,UAClB,eAACL,GAAD,WACA,cAACD,EAAD,UAAWa,IACP,eAACX,GAAD,WACI,cAACC,GAAD,CAASX,MAAM,UAAUL,QAASgC,EAAlC,qBACA,cAACf,GAAD,CAAYZ,MAAM,aAAYL,QAASgC,EAAvC,2BAGC,sCAASJ,EAAT,UACD,sCAASE,EAAT,gB,MC6CTK,OArFf,WAAgB,IAAD,EAEed,mBAAS,IAFxB,mBAELrC,EAFK,KAEEoD,EAFF,OAGef,mBAAS,QAHxB,mBAGL3B,EAHK,KAGE2C,EAHF,OAI6BhB,mBAAS,IAJtC,mBAIL1B,EAJK,KAIS2C,EAJT,OAKmBjB,qBALnB,mBAKLF,EALK,KAKIoB,EALJ,KAQP/C,EAAe,SAACyC,GACpB,IAAI9B,EAAO,GAETA,EADgB,UAAd8B,EAAMO,IACDxD,EAAMyD,QAAQ,MAAO,OAErBR,EAAMC,OAAO7B,MAEtBqC,EAAavC,IAITuC,EAAe,SAACvC,GAElBwC,MAAM,+DAAD,OAAgExC,EAAhE,6CAAiH,CACpH,OAAU,MACV,QAAW,CACT,iBAAkByC,qDAClB,kBAAmB,+CAGtBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OAAK1B,EAAc0B,OAG/B1B,EAAgB,SAAC0B,GACrB,GAAGA,EAASE,KAAM,CAChB,IAAIC,EAAc,GAClBH,EAAS3B,QAAQjB,KAAK,SAAAgD,GACpBD,EAAYE,KAAKD,EAAExB,SAErBa,EAAW,CACTpC,KAAM2C,EAASE,KACfxB,YAAasB,EAASpB,KAAK0B,KAC3BxB,IAAKkB,EAASpB,KAAK2B,SACnBvB,IAAKgB,EAASpB,KAAK4B,SACnBnC,QAAS8B,IAEXZ,EAAS,gBACDS,EAASS,KACjBlB,EAAS,SACTC,EAAgBQ,EAASU,UAEhBV,EAASS,KAClBlB,EAAS,SASb,MACc,SAAV3C,GAA8B,UAAVA,EACpB,qBACA+D,WAAY,SAAAxB,GACM,UAAdA,EAAMO,KACNhD,EAAayC,IAHjB,SAOE,cAAC,EAAD,CACEyB,UAAU,OACVlE,aAAcA,EACdC,cAjBc,SAACwC,GACrBG,EAASH,EAAMC,OAAO7B,QAiBhBe,cAAeA,EACf1B,MAAOA,EACPC,aAAcA,MAIlB,mCACE,cAAC,GAAD,CAAawB,QAASA,EAASC,cAAeA,OC1EvCuC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.4259481a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { VscTriangleRight }from 'react-icons/vsc';\r\nimport { FaCarrot }from 'react-icons/fa';\r\nimport styled from 'styled-components';\r\n\r\nconst popularCities = [ 'Toronto', 'Vancouver', 'Montreal' ];\r\n\r\nconst Home = ({onCitySelect, onInputChange, route, errorMessage}) => {\r\n  return (\r\n      <FormWrap>\r\n        <Form>\r\n            <Header>\r\n              Carrot \r\n              <FaCarrot />\r\n            </Header>\r\n            <Description> a Canadian weather app </Description>\r\n            <FormInput id={route}>\r\n              <CityInput type='text' placeholder='Enter City Name' onChange={onInputChange} />\r\n              <CitySubmit onClick={onCitySelect}><VscTriangleRight size={25}/></CitySubmit>\r\n            </FormInput> \r\n            <ErrorMessage id={route}> error: {errorMessage} </ErrorMessage>\r\n            <br/>\r\n            <p>Popular Cities</p> \r\n            <PopularCities>\r\n              {\r\n                popularCities.map((city, index) => (\r\n                <Link key={index} value={city} onClick={onCitySelect}>{city}</Link>\r\n                ))\r\n              }\r\n            </PopularCities>\r\n        </Form>\r\n      </FormWrap>\r\n  );\r\n}\r\n\r\nconst Header = styled.h1`\r\n*{\r\n  margin-left: 5px;\r\n}\r\n  *:hover{\r\n    color: orange;\r\n  }\r\n`\r\n\r\nconst FormWrap = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n`\r\n\r\nconst Form = styled.div`\r\n  position: absolute;\r\n  top: 20%;\r\n  width: 30%;\r\n  text-align: center;\r\n  animation: fadeIn ease 3s;\r\n  @media (min-width: 1281px) {\r\n    width: 500px;\r\n  }\r\n  @media (max-width: 900px) {\r\n    width: 80%;\r\n  }\r\n\r\n  @media (max-width: 300px) {\r\n    width: 95%;\r\n  }\r\n  @media (max-height: 450px) {\r\n    width: 70%;\r\n    top: 6%;\r\n  }\r\n  @media (max-height: 350px) {\r\n    *{\r\n      margin: 0\r\n    }\r\n  }\r\n\r\n`\r\nconst Description = styled.div`\r\n  margin: 0 0 30px;\r\n`\r\n\r\nconst FormInput = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  &[id='error'] {\r\n    border: 1px solid red;\r\n    border-radius: 15px;\r\n}\r\n`\r\nconst CityInput = styled.input`\r\n    width: 100%;\r\n    padding: 0 25px;\r\n    line-height: 25px;\r\n    background-color: rgb(0, 0, 0, 0.35);\r\n    opacity: 1;\r\n    border: none;\r\n    border-radius: 15px 0 0 15px;\r\n    outline: none;\r\n    font-family: redHat_regular;\r\n    color: #fff;\r\n    &::placeholder {\r\n      padding: 1rem 0;\r\n      color: #fff;\r\n    }\r\n`\r\n\r\nconst CitySubmit =styled.button`\r\n  width: 50px;\r\n  padding: 18px 0;\r\n  border-radius: 0 15px 15px 0;\r\n  align-self: flex-end;\r\n  background-color: rgb(0, 0, 0, 0.35);\r\n  opacity: 1;\r\n  border: none;\r\n  outline: none;\r\n  font-family: redHat_regular;\r\n  color: #fff;\r\n  * {\r\n    opacity: 0.7;\r\n    transition: all 0.5s;\r\n  }\r\n  *:hover {\r\n    opacity: 1;\r\n  }\r\n`\r\n\r\nconst ErrorMessage = styled.h3`\r\n  &[id='home'] {\r\n    display: none;\r\n  }\r\n  font-size: 14px;\r\n  color: red;\r\n`\r\n\r\nconst PopularCities = styled.div`\r\n  width: 100%;\r\n  margin-top: 5px;\r\n  padding: 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  * {\r\n    padding: 8px;\r\n    border-radius: 5px;\r\n    transition: all 0.5s;\r\n  }\r\n  *:hover {\r\n    transform: scale(1.1);\r\n  }\r\n  @media (max-width: 665px) {\r\n    padding: 0;\r\n}\r\n`\r\nconst Link = styled.button`\r\n  background-color: rgb(0, 0, 0, 0.35);\r\n  opacity: 1;\r\n  border: none;\r\n  outline: none;\r\n  font-family: redHat_regular;\r\n  color: #fff;\r\n`\r\n\r\nexport default Home;\r\n","import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport { BsFillCaretLeftFill } from 'react-icons/bs'\r\n\r\nconst WeatherPage = ({weather, onRouteChange}) => {\r\n    const [ unit, setUnit ] = useState('celcius');\r\n    const [ main, setMain ] = useState((weather.temperature - 273.15).toFixed());\r\n    const [ max, setMax ] = useState((weather.max- 273.15).toFixed());\r\n    const [ min, setMin ] = useState((weather.min - 273.15).toFixed());\r\n\r\n\r\n    const onUnitChange = (event) => {\r\n\r\n        if (unit === 'celcius') {\r\n            if (event.target.value === 'fahrenheit') {\r\n                setMain((( main * 9/5) + 32).toFixed() );\r\n                setMax((( max * 9/5) + 32).toFixed() ) ;\r\n                setMin((( min * 9/5) + 32).toFixed() )  \r\n            }\r\n\r\n        } else if (unit === 'fahrenheit') {\r\n            if (event.target.value === 'celcius') {\r\n                setMain(((5/9) * (main-32)).toFixed() ) \r\n                setMax(((5/9) * (max-32)).toFixed() ) \r\n                setMin(((5/9) * (min-32)).toFixed() ) \r\n            }\r\n        }\r\n        setUnit(event.target.value);\r\n    }\r\n\r\n    return ( \r\n        <Container>\r\n            <WeatherCard>\r\n            <ReturnArrow  size={25} onClick={onRouteChange}/>\r\n                <Header>\r\n                    <City>{weather.city}</City>\r\n                </Header>\r\n                <Weather>{weather.weather}</Weather>\r\n                <Temperature>\r\n                <MainTemp>{main}</MainTemp>\r\n                    <UnitsContainer>\r\n                        <Celcius value='celcius' onClick={onUnitChange}> &#176;C </Celcius>\r\n                        <Fahrenheit value='fahrenheit'onClick={onUnitChange}> &#176;F </Fahrenheit>\r\n                    </UnitsContainer>\r\n                </Temperature>\r\n                         <p>MAX: {max}&#176;</p>                    \r\n                        <p>MIN: {min}&#176;</p>\r\n            </WeatherCard>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n`\r\nconst WeatherCard = styled.div`\r\n    width: 25%;\r\n    text-align: center;\r\n    color: #fff;\r\n    background-color: rgb(0, 0, 0);\r\n    opacity: 0.5;\r\n    border-radius: 15px;\r\n    padding-bottom: 20px;\r\n    animation: fadeIn2 ease 3s;\r\n    margin-top: 200px;\r\n    @media (max-width: 1200px) {\r\n        width: 460px;\r\n    }\r\n    \r\n    @media (max-width: 510px) {\r\n        width: 90%;\r\n    }\r\n\r\n    @media (max-height: 760px) {\r\n        margin-top: 20vh;\r\n    }\r\n`\r\n\r\nconst Header =styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    flex:direction: row;\r\n`\r\n\r\nconst ReturnArrow = styled(BsFillCaretLeftFill)`\r\n    transition: color 0.5s;    \r\n    position: absolute;\r\n    top: 238px;\r\n    right: 55%;\r\n    @media (max-width: 1200px) {\r\n        right: 65%;\r\n    }\r\n    @media (max-width: 510px) {\r\n        right: 80%;\r\n    }\r\n    \r\n    @media (max-height: 760px) {\r\n        margin-top: 38px;\r\n        top: 20vh;\r\n    }\r\n    &:hover {\r\n        color: #85caff;\r\n      }\r\n`\r\n\r\nconst City = styled.p`\r\n    font-size: 30px;\r\n`\r\n\r\nconst Weather = styled.p`\r\n    font-size: 25px;\r\n    margin: 5px;\r\n`\r\n\r\nconst MainTemp = styled.div`\r\n    margin: 20px 0 0 0\r\n`\r\n\r\nconst Temperature = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: 5rem;\r\n    flex-direction: row;\r\n`\r\n\r\nconst UnitsContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin-left: 5px;\r\n    padding-top: 20px\r\n`\r\n\r\nconst Celcius = styled.button`\r\n    outline: none;\r\n    background: none;\r\n    border: none;\r\n    font-family: redHat_regular;\r\n    font-size: 28px;\r\n    line-height: 5px;\r\n    margin: 0;\r\n    color: #fff;\r\n    height: 30px;\r\n    padding-right: 10px;\r\n    border-right: 2px solid #fff;\r\n    transition: all 0.5s;\r\n    &:hover {\r\n        color: #85caff;\r\n      }\r\n`\r\n\r\nconst Fahrenheit = styled.button`\r\n    outline: none;\r\n    background: none;\r\n    border: none;\r\n    font-family: redHat_regular;\r\n    line-height: 5px;\r\n    font-size: 28px;\r\n    color: #fff;\r\n    height: 30px;\r\n    padding-right: 10px;\r\n    transition: all 0.5s;\r\n    &:hover {\r\n        color: #85caff;\r\n      }\r\n    \r\n`\r\n\r\nexport default WeatherPage;\r\n","import React, {useState} from 'react';\r\nimport HomeForm from './components/Form';\r\nimport WeatherPage from './components/WeatherPage';\r\nimport './App.css';\r\n\r\n\r\nfunction App() {\r\n\r\n  const [ input, setInput ] = useState('');\r\n  const [ route, setRoute ] = useState('home');\r\n  const [ errorMessage, setErrorMessage ] = useState('')\r\n  const [ weather, setWeather ] = useState();\r\n\r\n  \r\n  const onCitySelect = (event) => {\r\n    let city = '';\r\n    if (event.key === 'enter') {\r\n      city = input.replace(/\\s/g, '%20')\r\n    } else {\r\n      city = event.target.value;\r\n    } \r\n    onCitySubmit(city);\r\n  }\r\n\r\n\r\n  const onCitySubmit = (city) => {\r\n\r\n      fetch(`https://community-open-weather-map.p.rapidapi.com/weather?q=${city}%2Cca&cnt=10&units=metric%20or%20imperial`, {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n          \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\r\n          \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\"\r\n        }\r\n      })\r\n      .then(response => response.json())\r\n      .then(response =>  onRouteChange(response))\r\n  }\r\n\r\n  const onRouteChange = (response) => {\r\n    if(response.name) {\r\n      let mainWeather = [];\r\n      response.weather.map( w => {\r\n        mainWeather.push(w.main)\r\n      })\r\n      setWeather({\r\n        city: response.name,\r\n        temperature: response.main.temp,\r\n        max: response.main.temp_max,\r\n        min: response.main.temp_min,\r\n        weather: mainWeather\r\n    });\r\n      setRoute('weather');\r\n    } else if(response.cod) {\r\n      setRoute('error');\r\n      setErrorMessage(response.message)\r\n      \r\n    } else if(!response.cod) {\r\n      setRoute('home')\r\n    }\r\n  }\r\n\r\n  const onInputChange = (event) => {\r\n    setInput(event.target.value);\r\n  }\r\n\r\n\r\n  return (\r\n      route === 'home' || route === 'error'\r\n    ? <div\r\n      onKeyPress={event => {\r\n      if (event.key === 'Enter') {\r\n          onCitySelect(event);\r\n          }\r\n        }\r\n      }>\r\n        <HomeForm \r\n          className='home'\r\n          onCitySelect={onCitySelect} \r\n          onInputChange={onInputChange} \r\n          onRouteChange={onRouteChange} \r\n          route={route} \r\n          errorMessage={errorMessage}\r\n        />\r\n      </div>\r\n      :  \r\n      <>\r\n        <WeatherPage weather={weather} onRouteChange={onRouteChange}/>\r\n      </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}